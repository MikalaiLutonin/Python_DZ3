# Задача 1.==========================================================================================================
# Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка с нечетными индексами.
# Пример: [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12


import random


n = int(input('Введите количество чисел в списке: '))

my_list = []
# заполняем список рандомными числами от 0 до 9. В отличии от С#, 9-ка ВХОДИТ в диапазон.
for i in range(0, n):
    my_list.append(random.randint(0, 9))
print('Исходный список: ', my_list)


nech_list = []
# заполняем список числами, находящимся на нечетных позициях в Исходном списке
for i in range(1, len(my_list), 2):
    nech_list.append(my_list[i])
print('Список элементов на нечетных позициях: ', nech_list)


# подсчитываем сумму нечетных элементов встроенной функцией sum
print('Сумма элементов нечетных позиций равна: ', sum(nech_list))


# # Задача 2.==========================================================================================================
# # Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.
# # Пример:
# # [2, 3, 4, 5, 6] => [12, 15, 16]
# # [2, 3, 5, 6] => [12, 15]

# import random

# n = int(input('Введите количество чисел в списке: '))

# my_list = []

# # заполняем список рандомными числами от 0 до 9. В отличии от С#, 9-ка ВХОДИТ в диапазон.
# for i in range(0, n):
#     my_list.append(random.randint(0, 9))
# print('Исходный список: ', my_list)

# proizv_list = []
# j=0
# for i in range(len(my_list)):
#     if i < len(my_list)-1-j:
#         proizv_par = my_list[i] * my_list[len(my_list)-1-j]
#         proizv_list.append(proizv_par)
#         j+=1
#     elif i == len(my_list)-1-j:
#         my_list[i] *= my_list[i]
#         proizv_list.append(my_list[i])
#         break
    
# print('Список произведения пар чисел: ', proizv_list)


# # Задача 3.==========================================================================================================
# # Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.
# # Пример: [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# my_list = [1.1, 1.2, 3.1, 5.0, 10.01, 765, 21.3, 56]
# print('Исходный список: ', my_list)

# new_list = []
# for item in my_list:
#    if item - int(item) != 0: 
#     new_list.append(item - int(item))

# print(f'Разница между max и min значением дробной части равна: {(max(new_list) - min(new_list)):.2f}')


# # Задача 4.==========================================================================================================
# # Напишите программу, которая будет преобразовывать десятичное число в двоичное. Без применения встроеных методов (арифметически)
# # Пример:
# # 45 -> 101101
# # 3 -> 11
# # 2 -> 10


# n = int(input('Введите десятичное число: '))

# bin_list = []    # создаем пустой список, куда будет записываться результат преобразования

# def DEC_BIN(_n_):       # функция-рекурсия
#     if (_n_ == 0):
#         return bin_list
#     bin = _n_ % 2
#     bin_list.append(bin)
#     DEC_BIN(_n_ // 2)   # забираем int чатс при делении на 2

# DEC_BIN(n)
# bin_list.reverse()                              # переворачиваем список
# bin_str = ''.join(str(i) for i in bin_list)     # преобразование из списка в строку без пробелов
# print("Двоичная форма числа: ", bin_str)


# # Задача 5.==========================================================================================================
# # Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов (Негафибоначчи).
# # Пример: для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]



# n = int(input('Задайте число: '))

# def fib(n):                               # рекурсия ФИБОНАЧИ
#     if n in [1,2]:
#         return 1
#     else:
#         return fib(n-1) + fib (n-2)


# list = []
# list_nega = []
# list_rev = []
# list_nega_fib = []

# for i in range(1,n + 1):         # от [1 до n + 1)
#     list.append(fib(i))          # формируем прямой список Фибоначи
# list.reverse()

# for i in range(0, len(list)):    # формируем обратный список Фибоначи
#     list_rev.append(list[i])
# list.reverse()

# for i in range(0, len(list_rev)):
#     if i%2 == 0:
#         list_rev[i] = list_rev[i] * (-1)
#         list_nega.append(list_rev[i])        # формируем Нега-часть  списока Фибоначи
#     else:
#         list_nega.append(list_rev[i])


# for item in list_nega:             # объединяем все в один список
#     list_nega_fib.append(item)
# list_nega_fib.append(0) 
# for item in list:
#     list_nega_fib.append(item)

# print(list_nega_fib)

